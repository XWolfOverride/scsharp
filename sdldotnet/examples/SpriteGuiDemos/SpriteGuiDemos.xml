<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SpriteGuiDemo</name>
    </assembly>
    <members>
        <member name="T:SdlDotNet.Examples.SpriteGuiDemos.AnimatedDemoSprite">
            <summary>
            
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.AnimatedDemoSprite.#ctor(SdlDotNet.SurfaceCollection,System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="surfaces"></param>
            <param name="position"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.AnimatedDemoSprite.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.AnimatedDemoSprite.Dispose(System.Boolean)">
            <summary>
            Destroys the surface object and frees its memory
            </summary>
            <param name="disposing">If ture, dispose unmanaged resources</param>
        </member>
        <member name="T:SdlDotNet.Examples.SpriteGuiDemos.BounceMode">
            <summary>
            
            </summary>
        </member>
        <member name="T:SdlDotNet.Examples.SpriteGuiDemos.DemoMode">
            <summary>
            An abstract page to encapsulates the common functionality of all
            demo pages.
            </summary>
        </member>
        <member name="F:SdlDotNet.Examples.SpriteGuiDemos.DemoMode.surf">
            <summary>
            
            </summary>
        </member>
        <member name="F:SdlDotNet.Examples.SpriteGuiDemos.DemoMode.sprites">
            <summary>
            
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.DemoMode.LoadFloor">
            <summary>
            Loads a floor title into memory.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.DemoMode.LoadMarble(System.String)">
            <summary>
            Loads the marble series into memory and returns the
            collection.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.DemoMode.LoadRandomMarble">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.DemoMode.LoadTiledMarble(System.String)">
            <summary>
            Loads a marble from a single image and tiles it.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.DemoMode.Start(SdlDotNet.Sprites.SpriteCollection)">
            <summary>
            Indicates to the demo page that it should start displaying its
            data in the given sprite manager.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.DemoMode.Stop(SdlDotNet.Sprites.SpriteCollection)">
            <summary>
            Indicates to the demo page that it should stop displaying its
            data in the given sprite manager.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.DemoMode.RenderSurface">
            <summary>
            
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.DemoMode.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.DemoMode.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.DemoMode.Close">
            <summary>
            
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.DemoMode.Finalize">
            <summary>
            
            </summary>
        </member>
        <member name="P:SdlDotNet.Examples.SpriteGuiDemos.DemoMode.Surface">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:SdlDotNet.Examples.SpriteGuiDemos.DemoMode.Sprites">
            <summary>
            
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.BounceMode.#ctor">
            <summary>
            Constructs the internal sprites needed for our demo.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.BounceMode.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:SdlDotNet.Examples.SpriteGuiDemos.BounceSprite">
            <summary>
            
            </summary>
        </member>
        <member name="T:SdlDotNet.Examples.SpriteGuiDemos.BoundedSprite">
            <summary>
            
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.BoundedSprite.#ctor(SdlDotNet.SurfaceCollection,System.Drawing.Rectangle,System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="surfaces"></param>
            <param name="bounds"></param>
            <param name="coordinates"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.BoundedSprite.Update(SdlDotNet.TickEventArgs)">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.BoundedSprite.Dispose(System.Boolean)">
            <summary>
            Destroys the surface object and frees its memory
            </summary>
            <param name="disposing">If ture, dispose unmanaged resources</param>
        </member>
        <member name="P:SdlDotNet.Examples.SpriteGuiDemos.BoundedSprite.SpriteBounds">
            <summary>
            
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.BounceSprite.#ctor(SdlDotNet.SurfaceCollection,System.Drawing.Rectangle,System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="surfaces"></param>
            <param name="rect"></param>
            <param name="coordinates"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.BounceSprite.Update(SdlDotNet.TickEventArgs)">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.BounceSprite.Dispose(System.Boolean)">
            <summary>
            Destroys the surface object and frees its memory
            </summary>
            <param name="disposing">If ture, dispose unmanaged resources</param>
        </member>
        <member name="T:SdlDotNet.Examples.SpriteGuiDemos.BoundedTextSprite">
            <summary>
            Implements a text sprite that has a bounded box to define its
            size and an orientation (as a float) for vertical and horizontal
            alignment.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.BoundedTextSprite.#ctor(System.String,SdlDotNet.Font,System.Drawing.Size,System.Double,System.Double,System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="textItem"></param>
            <param name="font"></param>
            <param name="size"></param>
            <param name="horizontal"></param>
            <param name="vertical"></param>
            <param name="coordinates"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.BoundedTextSprite.#ctor(System.String,SdlDotNet.Font,System.Drawing.Size)">
            <summary>
            
            </summary>
            <param name="textItem"></param>
            <param name="font"></param>
            <param name="size"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.BoundedTextSprite.#ctor(System.String,SdlDotNet.Font,System.Drawing.Size,System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="textItem"></param>
            <param name="font"></param>
            <param name="size"></param>
            <param name="coordinates"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.BoundedTextSprite.#ctor(System.String,SdlDotNet.Font,System.Drawing.Size,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="textItem"></param>
            <param name="font"></param>
            <param name="size"></param>
            <param name="horizontal"></param>
            <param name="vertical"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.BoundedTextSprite.Update(SdlDotNet.TickEventArgs)">
            <summary>
            All sprites are tickable, regardless if they actual do
            anything. This ensures that the functionality is there, to be
            overridden as needed.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.BoundedTextSprite.Dispose(System.Boolean)">
            <summary>
            Destroys the surface object and frees its memory
            </summary>
            <param name="disposing">If ture, dispose unmanaged resources</param>
        </member>
        <member name="P:SdlDotNet.Examples.SpriteGuiDemos.BoundedTextSprite.HorizontalWeight">
            <summary>
            
            </summary>
        </member>
        <member name="P:SdlDotNet.Examples.SpriteGuiDemos.BoundedTextSprite.VerticalWeight">
            <summary>
            
            </summary>
        </member>
        <member name="T:SdlDotNet.Examples.SpriteGuiDemos.DragMode">
            <summary>
            
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.DragMode.#ctor">
            <summary>
            Constructs the internal sprites needed for our demo.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.DragMode.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:SdlDotNet.Examples.SpriteGuiDemos.DragSprite">
            <summary>
            
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.DragSprite.#ctor(System.Collections.Hashtable,System.String,System.Drawing.Point,System.Drawing.Rectangle)">
            <summary>
            
            </summary>
            <param name="frames"></param>
            <param name="key"></param>
            <param name="coordinates"></param>
            <param name="bounds"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.DragSprite.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.DragSprite.Update(SdlDotNet.MouseButtonEventArgs)">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.DragSprite.Update(SdlDotNet.MouseMotionEventArgs)">
            <summary>
            If the sprite is picked up, this moved the sprite to follow
            the mouse.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.DragSprite.Dispose(System.Boolean)">
            <summary>
            Destroys the surface object and frees its memory
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:SdlDotNet.Examples.SpriteGuiDemos.FontMode">
            <summary>
            
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.FontMode.#ctor">
            <summary>
            Constructs the internal sprites needed for our demo.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.FontMode.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:SdlDotNet.Examples.SpriteGuiDemos.GuiMode">
            <summary>
            
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.GuiMode.#ctor">
            <summary>
            Constructs the internal sprites needed for our demo.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.GuiMode.EnableTickEvent">
            <summary>
            
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.GuiMode.CreateMenus(SdlDotNet.Examples.GuiExample.GuiManager,SdlDotNet.Sprites.SpriteCollection)">
            <summary>
            
            </summary>
            <param name="gui"></param>
            <param name="sprites"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.GuiMode.Start(SdlDotNet.Sprites.SpriteCollection)">
            <summary>
            Adds the internal sprite manager to the outer one.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.GuiMode.Stop(SdlDotNet.Sprites.SpriteCollection)">
            <summary>
            Removes the internal manager from the controlling manager.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.GuiMode.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.GuiMode.OnCreateNewWindow(System.Object,SdlDotNet.Examples.GuiExample.MenuItemEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <param name="sender"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.GuiMode.OnTick(System.Object,SdlDotNet.TickEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.GuiMode.Dispose(System.Boolean)">
            <summary>
            Destroys the surface object and frees its memory
            </summary>
            <param name="disposing">If ture, dispose unmanaged resources</param>
        </member>
        <member name="T:SdlDotNet.Examples.SpriteGuiDemos.MultipleMode">
            <summary>
            
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.MultipleMode.#ctor">
            <summary>
            Constructs the internal sprites needed for our demo.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.MultipleMode.RenderSurface">
            <summary>
            
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.MultipleMode.AdjustViewport(SdlDotNet.Sprites.Sprite,SdlDotNet.Surface)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.MultipleMode.AdjustBoundedViewport(SdlDotNet.Sprites.Sprite,SdlDotNet.Surface)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.MultipleMode.Start(SdlDotNet.Sprites.SpriteCollection)">
            <summary>
            Adds the internal sprite manager to the outer one.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.MultipleMode.Stop(SdlDotNet.Sprites.SpriteCollection)">
            <summary>
            Removes the internal manager from the controlling manager.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.MultipleMode.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.MultipleMode.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:SdlDotNet.Examples.SpriteGuiDemos.MultipleMode.ViewRect">
            <summary>
            
            </summary>
        </member>
        <member name="T:SdlDotNet.Examples.SpriteGuiDemos.SdlDemo">
            <summary>
            The SdlDemo is a general testbed and display of various features
            in the MFGames.Sdl library. It includes animated sprites and
            movement. To run, it currently assumes that the current
            directory has a "test/" directory underneath it containing
            various images.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.SdlDemo.Main">
            <summary>
            
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.SdlDemo.Start">
            <summary>
            
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.SdlDemo.Tick(System.Object,SdlDotNet.TickEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.SdlDemo.Report(System.String)">
            <summary>
            
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.SdlDemo.Dispose">
            <summary>
            Closes and destroys this object
            </summary>
            <remarks>Destroys managed and unmanaged objects</remarks>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.SdlDemo.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:SdlDotNet.Examples.SpriteGuiDemos.SdlDemo.CurrentDemo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SdlDotNet.Examples.SpriteGuiDemos.SdlDemo.GuiManager">
            <summary>
            
            </summary>
        </member>
        <member name="P:SdlDotNet.Examples.SpriteGuiDemos.SdlDemo.Size">
            <summary>
            
            </summary>
        </member>
        <member name="T:SdlDotNet.Examples.SpriteGuiDemos.StatusWindow">
            <summary>
            This is a status window which shows the current state of the
            system at any time. This allows the system to report anything
            required.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.StatusWindow.#ctor(SdlDotNet.Examples.GuiExample.GuiManager)">
            <summary>
            Creates a basic status window above everything else.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.StatusWindow.Update(SdlDotNet.TickEventArgs)">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.StatusWindow.Dispose(System.Boolean)">
            <summary>
            Destroys the surface object and frees its memory
            </summary>
            <param name="disposing">If ture, dispose unmanaged resources</param>
        </member>
        <member name="T:SdlDotNet.Examples.SpriteGuiDemos.ViewportMode">
            <summary>
            
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.ViewportMode.#ctor">
            <summary>
            Constructs the internal sprites needed for our demo.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.ViewportMode.Start(SdlDotNet.Sprites.SpriteCollection)">
            <summary>
            Adds the internal sprite manager to the outer one.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.ViewportMode.Stop(SdlDotNet.Sprites.SpriteCollection)">
            <summary>
            Removes the internal manager from the controlling manager.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.ViewportMode.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.ViewportMode.RenderSurface">
            <summary>
            
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.ViewportMode.AdjustViewport">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SdlDotNet.Examples.SpriteGuiDemos.ViewportMode.AdjustBoundedViewport">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:SdlDotNet.Examples.SpriteGuiDemos.ViewportMode.CenterSprite">
            <summary>
            
            </summary>
        </member>
        <member name="P:SdlDotNet.Examples.SpriteGuiDemos.ViewportMode.ViewRect">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
