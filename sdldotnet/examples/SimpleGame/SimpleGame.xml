<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SimpleGame</name>
    </assembly>
    <members>
        <member name="T:SdlDotNet.Examples.SimpleGame.Entity">
            <summary>
            Derived class
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.Entity.#ctor(SdlDotNet.Examples.SimpleGame.EventManager)">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.Entity.Move(SdlDotNet.Examples.SimpleGame.Direction)">
            <summary>
            
            </summary>
            <param name="direction"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.Entity.Place(SdlDotNet.Examples.SimpleGame.Sector)">
            <summary>
            
            </summary>
            <param name="sector"></param>
        </member>
        <member name="P:SdlDotNet.Examples.SimpleGame.Entity.Sector">
            <summary>
            
            </summary>
        </member>
        <member name="T:SdlDotNet.Examples.SimpleGame.EntityMoveEventArgs">
            <summary>
            Summary description for Class1.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.EntityMoveEventArgs.#ctor(SdlDotNet.Examples.SimpleGame.Entity)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SdlDotNet.Examples.SimpleGame.EntityMoveEventArgs.Entity">
            <summary>
            
            </summary>
        </member>
        <member name="T:SdlDotNet.Examples.SimpleGame.EntityMoveRequestEventArgs">
            <summary>
            Summary description for Class1.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.EntityMoveRequestEventArgs.#ctor(SdlDotNet.Examples.SimpleGame.Direction)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SdlDotNet.Examples.SimpleGame.EntityMoveRequestEventArgs.Direction">
            <summary>
            
            </summary>
        </member>
        <member name="T:SdlDotNet.Examples.SimpleGame.EntityPlaceEventArgs">
            <summary>
            Summary description for Class1.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.EntityPlaceEventArgs.#ctor(SdlDotNet.Examples.SimpleGame.Entity)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SdlDotNet.Examples.SimpleGame.EntityPlaceEventArgs.Entity">
            <summary>
            
            </summary>
        </member>
        <member name="T:SdlDotNet.Examples.SimpleGame.EntitySprite">
            <summary>
            Derived class
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.EntitySprite.#ctor(SdlDotNet.Surface)">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.EntitySprite.Dispose(System.Boolean)">
            <summary>
            Destroys the surface object and frees its memory
            </summary>
            <param name="disposing">If ture, dispose unmanaged resources</param>
        </member>
        <member name="T:SdlDotNet.Examples.SimpleGame.EventManager">
            <summary>
            Summary description for EventManager.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.EventManager.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.EventManager.Publish(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
        </member>
        <member name="E:SdlDotNet.Examples.SimpleGame.EventManager.OnMapBuiltEvent">
            <summary>
            
            </summary>
        </member>
        <member name="E:SdlDotNet.Examples.SimpleGame.EventManager.OnEntityMoveEvent">
            <summary>
            
            </summary>
        </member>
        <member name="E:SdlDotNet.Examples.SimpleGame.EventManager.OnEntityMoveRequestEvent">
            <summary>
            
            </summary>
        </member>
        <member name="E:SdlDotNet.Examples.SimpleGame.EventManager.OnEntityPlaceEvent">
            <summary>
            
            </summary>
        </member>
        <member name="E:SdlDotNet.Examples.SimpleGame.EventManager.OnGameStatusEvent">
            <summary>
            
            </summary>
        </member>
        <member name="T:SdlDotNet.Examples.SimpleGame.EventManager.MapBuiltEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:SdlDotNet.Examples.SimpleGame.EventManager.EntityMoveEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:SdlDotNet.Examples.SimpleGame.EventManager.EntityMoveRequestEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:SdlDotNet.Examples.SimpleGame.EventManager.EntityPlaceEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:SdlDotNet.Examples.SimpleGame.EventManager.GameStatusEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:SdlDotNet.Examples.SimpleGame.GameStatus">
            <summary>
            
            </summary>
        </member>
        <member name="F:SdlDotNet.Examples.SimpleGame.GameStatus.Preparing">
            <summary>
            
            </summary>
        </member>
        <member name="F:SdlDotNet.Examples.SimpleGame.GameStatus.Started">
            <summary>
            
            </summary>
        </member>
        <member name="F:SdlDotNet.Examples.SimpleGame.GameStatus.Running">
            <summary>
            
            </summary>
        </member>
        <member name="F:SdlDotNet.Examples.SimpleGame.GameStatus.Paused">
            <summary>
            
            </summary>
        </member>
        <member name="F:SdlDotNet.Examples.SimpleGame.GameStatus.Stopped">
            <summary>
            
            </summary>
        </member>
        <member name="T:SdlDotNet.Examples.SimpleGame.Game">
            <summary>
            Summary description for Game.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.Game.#ctor(SdlDotNet.Examples.SimpleGame.EventManager)">
            <summary>
            
            </summary>
            <param name="eventManager"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.Game.Start">
            <summary>
            
            </summary>
        </member>
        <member name="P:SdlDotNet.Examples.SimpleGame.Game.GameStatus">
            <summary>
            
            </summary>
        </member>
        <member name="P:SdlDotNet.Examples.SimpleGame.Game.Map">
            <summary>
            
            </summary>
        </member>
        <member name="T:SdlDotNet.Examples.SimpleGame.GameMain">
            <summary>
            Summary description for Game.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.GameMain.CheckInstance">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:SdlDotNet.Examples.SimpleGame.GameStatusEventArgs">
            <summary>
            Summary description for Class1.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.GameStatusEventArgs.#ctor(SdlDotNet.Examples.SimpleGame.Game,SdlDotNet.Examples.SimpleGame.GameStatus)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SdlDotNet.Examples.SimpleGame.GameStatusEventArgs.GameStatus">
            <summary>
            
            </summary>
        </member>
        <member name="P:SdlDotNet.Examples.SimpleGame.GameStatusEventArgs.Game">
            <summary>
            
            </summary>
        </member>
        <member name="T:SdlDotNet.Examples.SimpleGame.GameView">
            <summary>
            Derived class
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.GameView.#ctor(SdlDotNet.Examples.SimpleGame.EventManager)">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.GameView.ShowMap(SdlDotNet.Examples.SimpleGame.Map)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.GameView.CreateView">
            <summary>
            
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.GameView.UpdateView">
            <summary>
            
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.GameView.ShowEntity(SdlDotNet.Examples.SimpleGame.Entity)">
            <summary>
            
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.GameView.MoveEntity(SdlDotNet.Examples.SimpleGame.Entity)">
            <summary>
            
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.GameView.Subscribe(System.Object,SdlDotNet.Examples.SimpleGame.MapBuiltEventArgs)">
            <summary>
            
            </summary>
            <param name="eventManager"></param>
            <param name="e"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.GameView.Subscribe(System.Object,SdlDotNet.Examples.SimpleGame.EntityPlaceEventArgs)">
            <summary>
            
            </summary>
            <param name="eventManager"></param>
            <param name="e"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.GameView.Subscribe(System.Object,SdlDotNet.Examples.SimpleGame.EntityMoveEventArgs)">
            <summary>
            
            </summary>
            <param name="eventManager"></param>
            <param name="e"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.GameView.GetSectorSprite(SdlDotNet.Examples.SimpleGame.Sector)">
            <summary>
            
            </summary>
            <param name="sector"></param>
            <returns></returns>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.GameView.Dispose(System.Boolean)">
            <summary>
            Destroy sprite
            </summary>
            <param name="disposing">If true, remove all unamanged resources</param>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.GameView.Dispose">
            <summary>
            Destroy object
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.GameView.Close">
            <summary>
            Destroy object
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.GameView.Finalize">
            <summary>
            Destroy object
            </summary>
        </member>
        <member name="T:SdlDotNet.Examples.SimpleGame.Direction">
            <summary>
            
            </summary>
        </member>
        <member name="F:SdlDotNet.Examples.SimpleGame.Direction.Up">
            <summary>
            
            </summary>
        </member>
        <member name="F:SdlDotNet.Examples.SimpleGame.Direction.Down">
            <summary>
            
            </summary>
        </member>
        <member name="F:SdlDotNet.Examples.SimpleGame.Direction.Left">
            <summary>
            
            </summary>
        </member>
        <member name="F:SdlDotNet.Examples.SimpleGame.Direction.Right">
            <summary>
            
            </summary>
        </member>
        <member name="T:SdlDotNet.Examples.SimpleGame.InputController">
            <summary>
            Derived class
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.InputController.#ctor(SdlDotNet.Examples.SimpleGame.EventManager)">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.InputController.KeyboardDown(System.Object,SdlDotNet.KeyboardEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.InputController.Run">
            <summary>
            
            </summary>
        </member>
        <member name="T:SdlDotNet.Examples.SimpleGame.LogFile">
            <summary>
            Summary description for LogFile.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.LogFile.Initialize">
            <summary>
            
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.LogFile.WriteLine(System.String)">
            <summary>
            
            </summary>
            <param name="format"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.LogFile.WriteLine(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="arg0"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.LogFile.WriteLine(System.String,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.LogFile.WriteLine(System.String,System.Object,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.LogFile.Write(System.String)">
            <summary>
            
            </summary>
            <param name="format"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.LogFile.Write(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="arg0"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.LogFile.Write(System.String,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.LogFile.Write(System.String,System.Object,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.LogFile.RotateLogs">
            <summary>
            
            </summary>
        </member>
        <member name="T:SdlDotNet.Examples.SimpleGame.Map">
            <summary>
            Summary description for Game.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.Map.#ctor(SdlDotNet.Examples.SimpleGame.EventManager)">
            <summary>
            
            </summary>
            <param name="eventManager"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.Map.Build">
            <summary>
            
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.Map.GetSectors">
            <summary>
            
            </summary>
        </member>
        <member name="T:SdlDotNet.Examples.SimpleGame.MapBuiltEventArgs">
            <summary>
            Summary description for Class1.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.MapBuiltEventArgs.#ctor(SdlDotNet.Examples.SimpleGame.Map)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SdlDotNet.Examples.SimpleGame.MapBuiltEventArgs.Map">
            <summary>
            
            </summary>
        </member>
        <member name="T:SdlDotNet.Examples.SimpleGame.Names">
            <summary>
            Summary description for Class1.
            </summary>
        </member>
        <member name="P:SdlDotNet.Examples.SimpleGame.Names.WindowCaption">
            <summary>
            
            </summary>
        </member>
        <member name="P:SdlDotNet.Examples.SimpleGame.Names.LogFile">
            <summary>
            
            </summary>
        </member>
        <member name="P:SdlDotNet.Examples.SimpleGame.Names.StartingSimpleGame">
            <summary>
            
            </summary>
        </member>
        <member name="P:SdlDotNet.Examples.SimpleGame.Names.QuittingSimpleGame">
            <summary>
            
            </summary>
        </member>
        <member name="P:SdlDotNet.Examples.SimpleGame.Names.StartingSector">
            <summary>
            
            </summary>
        </member>
        <member name="P:SdlDotNet.Examples.SimpleGame.Names.LogFile2">
            <summary>
            
            </summary>
        </member>
        <member name="P:SdlDotNet.Examples.SimpleGame.Names.LogFile3">
            <summary>
            
            </summary>
        </member>
        <member name="T:SdlDotNet.Examples.SimpleGame.Player">
            <summary>
            Derived class
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.Player.#ctor(SdlDotNet.Examples.SimpleGame.EventManager)">
            <summary>
            constructor
            </summary>
        </member>
        <member name="T:SdlDotNet.Examples.SimpleGame.Sector">
            <summary>
            Summary description for Sector.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.Sector.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.Sector.MovePossible(SdlDotNet.Examples.SimpleGame.Direction)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.Sector.GetNeighbors(SdlDotNet.Examples.SimpleGame.Direction)">
            <summary>
            
            </summary>
            <param name="direction"></param>
            <returns></returns>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.Sector.SetNeighbors(SdlDotNet.Examples.SimpleGame.Direction,SdlDotNet.Examples.SimpleGame.Sector)">
            <summary>
            
            </summary>
            <param name="direction"></param>
            <param name="sector"></param>
        </member>
        <member name="T:SdlDotNet.Examples.SimpleGame.SectorSprite">
            <summary>
            Summary description for Sector.
            </summary>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.SectorSprite.#ctor(SdlDotNet.Surface,SdlDotNet.Examples.SimpleGame.Sector)">
            <summary>
            
            </summary>
            <param name="screen"></param>
            <param name="sector"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.SectorSprite.#ctor(SdlDotNet.Surface,SdlDotNet.Examples.SimpleGame.Sector,System.Drawing.Rectangle)">
            <summary>
            
            </summary>
            <param name="screen"></param>
            <param name="sector"></param>
            <param name="rect"></param>
        </member>
        <member name="M:SdlDotNet.Examples.SimpleGame.SectorSprite.Dispose(System.Boolean)">
            <summary>
            Destroys the surface object and frees its memory
            </summary>
            <param name="disposing">If ture, dispose unmanaged resources</param>
        </member>
        <member name="P:SdlDotNet.Examples.SimpleGame.SectorSprite.Sector">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
